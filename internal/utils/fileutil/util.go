// Copyright 2017-2019 Lei Ni (nilei81@gmail.com)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fileutil

import (
	"os"
	"path/filepath"
)

const (
	// DefaultFileMode is the default file mode for files generated by
	// Dragonboat.
	DefaultFileMode    = 0640
	defaultDirFileMode = 0750
)

// Exist returns whether the specified filesystem entry exists.
func Exist(name string) bool {
	_, err := os.Stat(name)
	return err == nil
}

// MkdirAll creates the specified dir.
func MkdirAll(dir string) error {
	return os.MkdirAll(dir, defaultDirFileMode)
}

// SyncDir calls fsync on the specified directory.
func SyncDir(dir string) error {
	fileInfo, err := os.Stat(dir)
	if err != nil {
		return err
	}
	if !fileInfo.IsDir() {
		panic("not a dir")
	}
	df, err := os.Open(filepath.Clean(dir))
	if err != nil {
		return err
	}
	defer func() {
		if err := df.Close(); err != nil {
			panic(err)
		}
	}()
	return df.Sync()
}
